import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sc

from sklearn.preprocessing import LabelEncoder
from sklearn.feature_extraction.text import TfidfVectorizer

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

df=pd.read_csv('heart.csv')
print(df.shape)
#DATA CLEANING
df.drop_duplicates(inplace=True)
df.dropna(inplace=True)
df.head()
lc=LabelEncoder()
cols=df.columns
for i in cols:
  if df[i].dtypes=='object':
    df[i]=lc.fit_transform(df[i])
df

for i in cols:
  q1=df[i].quantile(0.25)
  q3=df[i].quantile(0.75)

  qdif=q3-q1

  lb=q1-0.5*qdif
  ub=q3+0.5*qdif

  df=df[(df[i]>=lb) & (df[i]<=ub)]

for i in cols:
   plt.boxplot(df[i])
   plt.show()
print(df)


#DECISION TREE CLASSIFIER MODEL
data=df.columns
x=df.iloc[:,:-1]
y=df['target']
x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.25)

s_model=DecisionTreeClassifier(max_depth=9)
s_model.fit(x_train,y_train)
y_pred=s_model.predict(x_train)
ac=accuracy_score(y_train,y_pred)
print(ac)

from sklearn.tree import plot_tree
plt.figure(figsize=(8,8))
plot_tree(s_model,filled=True,feature_names=df.columns,class_names=['no heartattak','heartattak'])
plt.title("Decision tree classifier")
plt.show()
import numpy as np

s = [6, 56, 0, 1, 140, 294, 0, 0, 153, 0, 1, 3,1]
s = np.array(s).reshape(1,-1) 
pred = s_model.predict(s)

print(pred)
