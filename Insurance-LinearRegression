import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sc

from sklearn.preprocessing import LabelEncoder
from sklearn.feature_extraction.text import TfidfVectorizer

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score,mean_absolute_error,mean_squared_error,r2_score

df=pd.read_csv('insurance_data.csv')

#DATA CLEANING
df.drop_duplicates(inplace=True)
df.dropna(inplace=True)
df.head()
lc=LabelEncoder()
cols=df.columns
for i in cols:
  if df[i].dtypes=='object':
    df[i]=lc.fit_transform(df[i])
df

for i in cols:
  q1=df[i].quantile(0.25)
  q3=df[i].quantile(0.75)

  qdif=q3-q1 

  lb=q1-0.5*qdif
  ub=q3+0.5*qdif

  df=df[(df[i]>=lb) & (df[i]<=ub)]
  
for i in cols:
   plt.boxplot(df[i])
   plt.show()      
df


#ML MODELS
x=df.iloc[:,:-1]
y=df['charges']
x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.25)
model=LinearRegression()
model.fit(x_train,y_train)

y_train_predict=model.predict(x_train)
y_test_predict=model.predict(x_test)


acc_score_train=mean_squared_error(y_test,y_test_predict)

df.columns
new_data = pd.DataFrame(data=[[
    25.0, 
    0,  
    28.595,  
    0.0,  
    0, 
    11875.53426,
    5.0, 
    808739.0,  
    7.490273e+06,
    1.0, 
    1.090736e+08, 
    0  
]], columns=X_train.columns) 
predicted_charge = model.predict(new_data)
print(f"Predicted Insurance Charge: ${predicted_charge[0]:.2f}")
