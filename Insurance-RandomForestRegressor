df=pd.read_csv('insurance_data.csv')
from sklearn.model_selection import GridSearchCV
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import LabelEncoder

df.drop_duplicates(inplace=True)
df.dropna(inplace=True)
for i in df.columns:
    if df[i].dtype=='object':
        le=LabelEncoder()
        df[i]=le.fit_transform(df[i])
for i in df.columns:
  plt.boxplot(df[i])
  plt.show()

for i in df.columns:
  q1=df[i].quantile(0.25)
  q3=df[i].quantile(0.75)

  iqr=q3-q1

  lb=q1-(0.5*iqr)
  ub=q3+(0.5*iqr)

  df=df[(df[i]>=lb) & (df[i]<=ub)]
for i in df.columns:
  plt.boxplot(df[i])
  plt.show()

grid_data = {
    'n_estimators': [50, 100, 150],
    'min_samples_split': [2, 5, 10],
    'min_samples_leaf': [1, 2, 4],
    'max_depth': [5, 10, 15]
}
x=df.drop('charges',axis=1)
y=df['charges']
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
model=RandomForestRegressor(random_state=42)
grid_search=GridSearchCV(model,grid_data,cv=5,scoring='r2')
grid_search.fit(x_train,y_train)
print(grid_search.best_params_)
print(grid_search.best_score_)


model=RandomForestRegressor(n_estimators=150,min_samples_split=2,min_samples_leaf=1,max_depth=10,random_state=42)
model.fit(x_train,y_train)
y_pred=model.predict(x_test)
print(r2_score(y_test,y_pred))


my_data = [
    18,               # Age
    "male",           # Sex
    41.14,            # BMI
    0,                # Children
    "no",             # Smoker
    46770.58533,      # Charges
    12,               # Policy Years (assumed)
    706423,           # Customer ID (assumed)
    4486741.201,      # Total Policy Coverage (assumed)
    0,                # Claim Count (assumed)
    97193784.44,      # Payout (assumed)
    "southeast"       # Region
]

my_data=le.fit_transform(my_data)
my_data=np.array(my_data)
my_data=my_data.reshape(1,-1)
result=model.predict(my_data)

print(result)
